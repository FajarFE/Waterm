# version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - '${PORT:-3000}:3000'
      - '${SOCKET_PORT:-3001}:3001'
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      - NEXT_PUBLIC_SOCKET_URL=${NEXT_PUBLIC_SOCKET_URL:-ws://localhost:3001}
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
      - AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - REGION=${REGION}
      - ACCESS_KEY_ID=${ACCESS_KEY_ID}
      - SECRET_ACCESS_KEY=${SECRET_ACCESS_KEY}
      - BUCKET_NAME=${BUCKET_NAME}
      - CLOUDFLARE_R2_PUBLIC_URL=${CLOUDFLARE_R2_PUBLIC_URL}
      - ACCOUNT_CLOUDFLARE=${ACCOUNT_CLOUDFLARE}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TOKEN_FONNTE=${TOKEN_FONNTE}
      - SMTP_HOST=mailhog
      - SMTP_PORT=${SMTP_PORT:-1026}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - EMAIL_FROM_ADDRESS=${EMAIL_FROM_ADDRESS}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - SIGNATURE_SECRET=${SIGNATURE_SECRET}
      - HOSTNAME=${HOSTNAME:-0.0.0.0}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    depends_on:
      - db
      - mailhog
    networks:
      - app-network
    volumes:
      - ./.env:/app/.env
      - ./public:/app/public

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    restart: always
    ports:
      - '${POSTGRES_PORT:-5433}:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-kangsanuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-gacor}
      - POSTGRES_DB=${POSTGRES_DB:-kangsandb}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-kangsanuser} -d ${POSTGRES_DB:-kangsandb}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - '${MAILHOG_UI_PORT:-8026}:8025'
      - '${SMTP_PORT:-1026}:1025'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
